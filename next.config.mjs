// import { withPayload } from '@payloadcms/next/withPayload'

// /** @type {import('next').NextConfig} */
// const nextConfig = {
//   async rewrites() {
//     return [
//       {
//         // old URL generated by Payload
//         source: '/api/media/file/:path*',
//         // new location inside /public
//         destination: '/media/:path*',
//       },
//     ]
//   },

//   images: {
//     minimumCacheTTL: 12 * 60 * 60, // 12 hours

//     remotePatterns: [
//       {
//         protocol: 'https',
//         hostname: '**',
//       },
//       {
//         protocol: 'http',
//         hostname: '**',
//       },
//     ],
//   },
// }

// export default withPayload(nextConfig, { devBundleServerPackages: false })
import { withPayload } from '@payloadcms/next/withPayload'

const PUBLIC_URL = process.env.PUBLIC_APP_URL /** single source **/

/** @type {import('next').NextConfig} */
const nextConfig = {
  async rewrites() {
    return [
      {
        // keep media files working
        source: '/api/media/file/:path*',
        destination: '/media/:path*',
      },
    ]
  },

  /* optional: push www â†’ apex so cookies never split */
  async redirects() {
    return [
      {
        source: '/:path*',
        has: [{ type: 'host', value: 'www.treksoulnepal.com' }],
        destination: `${PUBLIC_URL}/:path*`,
        permanent: true,
      },
    ]
  },

  images: {
    minimumCacheTTL: 12 * 60 * 60,
    remotePatterns: [
      { protocol: 'https', hostname: '**' },
      { protocol: 'http', hostname: '**' },
    ],
  },
}

export default withPayload(nextConfig, { devBundleServerPackages: false })
